package co.elastic.gradle.dockerbase.lockfile;

import co.elastic.gradle.utils.Architecture;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
import org.gradle.api.tasks.Nested;
import org.gradle.api.tasks.Optional;
import org.jetbrains.annotations.NotNull;

import javax.annotation.Nullable;
import java.io.IOException;
import java.io.Reader;
import java.io.Serializable;
import java.io.Writer;
import java.util.Map;

public record Lockfile(
        @NotNull  Map<Architecture, Packages> packages,
        @Nullable  Map<Architecture, UnchangingContainerReference> image
) implements Serializable {
    @JsonCreator
    public Lockfile {
    }

    @Nested
    public Map<Architecture, Packages> getPackages() {
        return packages;
    }

    @Nested
    @Optional
    public Map<Architecture, UnchangingContainerReference> getImage() {
        return image;
    }

    public static Lockfile parse(Reader reader) throws IOException {
        ObjectMapper mapper = new ObjectMapper(new YAMLFactory());
        return mapper.readValue(reader, Lockfile.class);
    }

    public static void write(Lockfile lockfile, Writer writer) throws IOException {
        ObjectMapper mapper = new ObjectMapper(new YAMLFactory());
        writer.write("# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n");
        mapper.writeValue(writer, lockfile);
    }

}